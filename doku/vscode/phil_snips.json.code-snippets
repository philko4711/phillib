{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"console out": {
		"prefix": "dbgcout",
		"body": [
		  "std::cout << __PRETTY_FUNCTION__ << \"$0\" << std::endl;"
		],
		"description": "console out"
	  },
	  "qt console out": {
		"prefix": "dbgqdb",
		"body": [
		  "qDebug() << __PRETTY_FUNCTION__ << \"$0\";"
		],
		"description": "qt console out"
	  },
	  "main ros": {
		"prefix": "main_ros",
		"body": [
		  "#include <ros/ros.h>",
		  "int main(int argc, char** argv)",
		  "{",
		  "  ros::init(argc, argv, \"$0\")",
		  "return 0;",
		  "}"
		],
		"description": "main method ros"  
	}
}